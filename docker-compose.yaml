version: '3.8'

services:

  rl-service:
    build:
      context: ./services/simulation-service
      dockerfile: Dockerfile.rl
    ports:
      - "5000:5000"
    volumes:
      - ./services/simulation-service:/app
      - rl-data:/app/node_modules  # This prevents node_modules from being overwritten
    restart: unless-stopped
    environment:
      - PORT=5000
    # Add healthcheck to ensure the service is working properly
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s

  simulation-service:
    build:
      context: ./services/simulation-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - INFLUXDB_URL=http://influxdb:8086
      - RL_SERVICE_URL=http://rl-service:5000
    volumes:
      - ./services/simulation-service:/app:cached
      - sim-modules:/app/node_modules  # This prevents the node_modules from being overwritten
    depends_on:
      - device-service
      - kafka
      - influxdb
      - rl-service
    restart: on-failure

  device-service:
    build: 
      context: ./services/device-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - REDIS_ADDR=redis:6379
    volumes:
      - ./services/device-service:/app
    depends_on:
      - redis
    restart: on-failure

  frontend-service:
    build:
      context: ./services/frontend-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./services/frontend-service:/app
      - frontend-modules:/app/node_modules
    depends_on:
      - simulation-service
    restart: on-failure

  # Simplified Kafka configuration
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    restart: unless-stopped

  influxdb:
    image: influxdb:latest
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=simulation
      - DOCKER_INFLUXDB_INIT_BUCKET=energy_metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mytoken
    volumes:
      - influxdb-data:/var/lib/influxdb2
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8086/ping || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  influxdb-data:
  redis-data:
  sim-modules:
  frontend-modules:
  rl-data: